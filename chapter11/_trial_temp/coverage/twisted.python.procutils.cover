       # Copyright (c) Twisted Matrix Laboratories.
       # See LICENSE for details.
       
       """
       Utilities for dealing with processes.
    1: """
       
    1: import os
       
    1: def which(name, flags=os.X_OK):
           """Search PATH for executable files with the given name.
           
           On newer versions of MS-Windows, the PATHEXT environment variable will be
           set to the list of file extensions for files considered executable. This
           will normally include things like ".EXE". This fuction will also find files
           with the given name ending with any of these extensions.
       
           On MS-Windows the only flag that has any meaning is os.F_OK. Any other
           flags will be ignored.
           
           @type name: C{str}
           @param name: The name for which to search.
           
           @type flags: C{int}
           @param flags: Arguments to L{os.access}.
           
           @rtype: C{list}
           @param: A list of the full paths to files found, in the
           order in which they were found.
           """
    1:     result = []
    1:     exts = filter(None, os.environ.get('PATHEXT', '').split(os.pathsep))
    1:     path = os.environ.get('PATH', None)
    1:     if path is None:
>>>>>>         return []
   14:     for p in os.environ.get('PATH', '').split(os.pathsep):
   13:         p = os.path.join(p, name)
   13:         if os.access(p, flags):
>>>>>>             result.append(p)
   13:         for e in exts:
>>>>>>             pext = p + e
>>>>>>             if os.access(pext, flags):
>>>>>>                 result.append(pext)
    1:     return result
       
