       # Copyright (c) Twisted Matrix Laboratories.
       # See LICENSE for details.
       
    1: from twisted.python.compat import execfile
       
       
    1: def getNumber(filename):
>>>>>>     return None
       
    1: def getReference(filename):
>>>>>>     return None
       
    2: class Book:
       
    1:     def __init__(self, filename):
>>>>>>         self.chapters = []
>>>>>>         self.indexFilename = None
       
               global Chapter
>>>>>>         Chapter = self.Chapter
               global getNumber
>>>>>>         getNumber = self.getNumber
               global getReference
>>>>>>         getReference = self.getNumber
               global Index
>>>>>>         Index = self.Index
       
>>>>>>         if filename:
>>>>>>             execfile(filename, globals())
       
    1:     def getFiles(self):
>>>>>>         return [c[0] for c in self.chapters]
       
    1:     def getNumber(self, filename):
>>>>>>         for c in self.chapters:
>>>>>>             if c[0] == filename:
>>>>>>                 return c[1]
>>>>>>         return None
       
    1:     def getIndexFilename(self):
>>>>>>         return self.indexFilename
       
    1:     def Chapter(self, filename, number):
>>>>>>         self.chapters.append((filename, number))
       
    1:     def Index(self, filename):
>>>>>>         self.indexFilename = filename
       
       #_book = Book(None)
